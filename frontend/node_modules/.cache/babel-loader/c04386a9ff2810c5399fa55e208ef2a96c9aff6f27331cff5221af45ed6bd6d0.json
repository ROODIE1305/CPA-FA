{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khand\\\\CPA-FA\\\\frontend\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom'; // needed for routing\nimport App from './App'; // your real App\nimport { testBackendConnection } from './api';\n\n// Separate small connection test (optional but clean)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectionTester = () => {\n  _s();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await testBackendConnection();\n        console.log('Backend Response:', data);\n      } catch (error) {\n        console.error('Backend connection failed');\n      }\n    };\n    fetchData();\n  }, []);\n  return null; // we don't want to render anything here\n};\n_s(ConnectionTester, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ConnectionTester;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(ConnectionTester, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 3\n}, this));\nvar _c;\n$RefreshReg$(_c, \"ConnectionTester\");","map":{"version":3,"names":["React","useEffect","ReactDOM","BrowserRouter","App","testBackendConnection","jsxDEV","_jsxDEV","ConnectionTester","_s","fetchData","data","console","log","error","_c","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","$RefreshReg$"],"sources":["C:/Users/khand/CPA-FA/frontend/src/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom'; // needed for routing\r\nimport App from './App'; // your real App\r\nimport { testBackendConnection } from './api';\r\n\r\n// Separate small connection test (optional but clean)\r\nconst ConnectionTester = () => {\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const data = await testBackendConnection();\r\n        console.log('Backend Response:', data);\r\n      } catch (error) {\r\n        console.error('Backend connection failed');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return null; // we don't want to render anything here\r\n};\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <ConnectionTester />\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,aAAa,QAAQ,kBAAkB,CAAC,CAAC;AAClD,OAAOC,GAAG,MAAM,OAAO,CAAC,CAAC;AACzB,SAASC,qBAAqB,QAAQ,OAAO;;AAE7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7BR,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMN,qBAAqB,CAAC,CAAC;QAC1CO,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,IAAI,CAAC;MACxC,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,CAAC;MAC5C;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;AAACD,EAAA,CAfID,gBAAgB;AAAAO,EAAA,GAAhBP,gBAAgB;AAiBtB,MAAMQ,IAAI,GAAGd,QAAQ,CAACe,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTb,OAAA,CAACP,KAAK,CAACqB,UAAU;EAAAC,QAAA,eACff,OAAA,CAACJ,aAAa;IAAAmB,QAAA,gBACZf,OAAA,CAACC,gBAAgB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpBnB,OAAA,CAACH,GAAG;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACA,CACpB,CAAC;AAAC,IAAAX,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}